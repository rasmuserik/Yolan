[exports set 'toIL
  [fn [ast]
    [def functions '[]]
    [def fnid 0]
    [def compileFunction
      [fn [name args ast]
        [def locals '[]]
        [def globals '[]]
        [def consts '[]]
        [def currentFunction '[]]
        [def compileExpression
          [fn [expr withArg]
            [if [Array isArray expr]
              [do [def code '[]]
                [def first [expr get 0]]
                [if [first == '#]
                    [if withArg
                        [return '[[undefined]]]
                        [return '[]]
                    ]]
                [if [first == 'do][do
                    [def i 1]
                    [def length [expr get 'length]]
                    [while [i < length]
                        [code concat [compileExpression call null [expr get i] [[i == [length - 1]] or withArg]]] 
                        [set i [i + 1]]
                        ]
                    [console log code]
                    [return code]
                ]]
                [def method [expr get 1]]
                [set expr [expr slice 1]]
                [expr set 0 first]
                [set types [expr map [fn [] 'var]]]
                [while [0 < [expr get 'length]]
                  [set code
                    [code concat
                      [compileExpression call null [expr pop] true]]]]
                [def invokeExpr '[invoke]]
                [invokeExpr push method]
                [set invokeExpr [invokeExpr concat types]]
                [code push invokeExpr]
                    [console log code]
                [return code]]]
            [if [withArg fails] [return '[]]]
            [# look up var]
            [set op 'getVar]
            [set id expr]
            [new array [new array op id]]]]
        [def code [compileExpression call null [ast slice 0] true]]
        [code push '[return]]
        [currentFunction push [new array 'id name]]
        [currentFunction push [new array 'args args]]
        [currentFunction push [new array 'locals locals]]
        [currentFunction push [new array 'globals globals]]
        [currentFunction push [new array 'consts consts]]
        [currentFunction push [new array 'code code]]
        currentFunction]]
    [functions push [compileFunction call null 'entry '[] ast]]
    functions]]

