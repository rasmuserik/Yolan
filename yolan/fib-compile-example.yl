[def fib
  [fn [n]
    [def result 1]
    [if [1 < n]
      [set result [[fib call null [n - 1]] + [fib call null [n - 2]]]]]
    [console log result]
    result]]

[console log [fib call null 10]]

[# yvm
  [function _0
    [global [fib console null]]
    [local [result]]
    [args [n]]
    [consts [1 2]]
    [code
      [do [const 0]
        [setLocal result]
        [pop]
        [if [[const 0] [getArg n] [invoke var < 2]]
          [[const 1] [getArg n]
            [invoke var - 2]
            [getGlobal null]
            [getGlobal fib]
            [invoke var call 3]
            [const 0]
            [getArg n]
            [invoke var - 2]
            [getGlobal null]
            [getGlobal fib]
            [invoke var call 3]
            [invoke var + 3]
            [setLocal result]]
          [[pushUndefined]]]
        [pop]
        [getLocal result]
        [getGlobal console]
        [invoke var log 2]
        [pop]
        [getLocal result]
        [return]]]]
  [function entry
    [global [console null]]
    [local [fib]]
    [args []]
    [consts [10]]
    [getGlobal null]
    [getGlobal console]
    [getLocal fib]
    [createFunction _0 3]
    [setLocal fib]
    [pop]
    [const 0]
    [getGlobal null]
    [getLocal fib]
    [invoke var call 3]
    [getGlobal console]
    [invoke var log 2]
    [return]]]

