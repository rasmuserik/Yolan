[set yolan [new object]]

[def engine undefined]

[; Node]

[if [[[process jsType] == 'undefined] fails] [set engine 'node]]

[; Rhino]

[if [[[java jsType] == 'undefined] fails] [set engine 'rhino]]

[; Browser]

[def loadedModules [new object]]

[if [[[navigator jsType] == 'undefined] fails]
  [set engine 'web]
  [if [[window get 'require] fails]
    [def modules [new object]]
    [def require
      [fn [name]
        [if [[loadedModules get name] fails]
          [console log 'initialising name]
          [def module [new object]]
          [def exports [new object]]
          [module set 'exports exports]
          [module set 'require require]
          [[modules get name] call null require exports module]
          [loadedModules set name [module get 'exports]]]
        [loadedModules get name]]]
    [window set 'define [fn [name dep f] [modules set name f] undefined]]
    [console log 'def 'require]
    [window set 'require require]]]

[; yolan defs]

[yolan set 'engine engine]

[; Shims]

[if [[console jsType] == 'undefined]
  [set console [new object]]
  [console set 'log [fn [] undefined]]
  [if [[[print jsType] == 'undefined] fails] [console set 'log print]]]

[if [[yolan get 'engine] fails] [console log 'Error\ detecting\ engine:]]

[; Start execution]

[def run
  [fn [args]
    [def moduleName [[args get 0] or [engine + 'main]]]
    [[[module require ['./ + moduleName]] get 'run] apply null
      [args slice 1]]]]

[yolan set 'run run]

[if [[[module jsType] == 'undefined] fails] [module set 'exports yolan]]

[if [engine == 'node] [yolan run [[process get 'argv] slice 2]]]


[Section: Cross-platform file-io
[if [engine == 'node]
[exports set 'readTextFile [fn [fname callback]
  [[module require 'fs] readFile fname 'utf8 callback]
    [fn [err data] 
      [if err
	[return [callback call null [new object ['err err]]]]]
      [callback call null data]]
]]]
[if [engine == 'web]
  [exports set 'readTextFile [fn [fname callback]
    [def req [new XMLHttpRequest]]
      [req set
        'onreadystatechange
        [fn [event]
          [if [[req get 'readyState] == 4]
            [if [[[req get 'status] == 200] fails]
                [return [callback call null [new object ['err 'Request\ error:\ status\ not\ 200\ OK] ['req req]]]]]
            [callback call null [req get 'responseText]]]
          undefined]]
      [req open 'GET ['/readTextFile/ + fname] true]
      [req send null]]
]]

]
