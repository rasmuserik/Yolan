[def diff exports]
[; diff set 'levenshtein [fn [arr0 arr1]
    [def prev [@]]
    [def current [@]]
    [def t undefined]
    [def ops [@]]
    [def prevOps [@]]
    [def i 0]
    [while [i <= [arr0 'length]]
        [current push i]
        [set i [i + 1]]
        [if [0 < i]
            [ops set i [@ 'del [ops get [i - 1]]]]]
    ]
    [def j 1]
    [while [j <= [arr1 'length]]
        [Section: swap prev/current
            [set t prev] [set prev current] [set current t]]
        [set current 0 j]
        [Section: swap prevOps/ops
            [set t prevOps] [set prevOps ops] [set opst]]
        [set ops 0 [@ 'ins [prevOps get 0]]]
        [def cj [arr1 get [j - 1]]]
        [set i 1]
        [while [i <= [arr0 'length]]
            [def ci [arr1 get [i - 1]]]
            [if-else [ci == cj]
            [do 
                [ops set j [@ 'skip [ops get [j - 1]]]]
            [[ops j] push 'skip]
                [current set i [prev get [i - 1]]]]
            [do 
                [def delLength [[prev get i] + 1]]
                [def insLength [[current get [i - 1]] + 1]]
                [def subLength [[prev get [i - 1]] + 1]]
            ]]
            [set i [i + 1]]]
        [set j [j + 1]]]
    [return current]
]]

[; diff set 'run [fn []
    [console log '\n\n]
    [console log '\n [diff levenshtein ['abc split ""] ['ab split ""]]]
    [console log '\n [diff levenshtein ['ac split ""] ['abc split ""]]]
    [console log '\n [diff levenshtein ['adc split ""] ['abc split ""]]]
    [; console log '\n [diff levenshtein ['abdbefgnahijnkamnlmn split ""] ['abcedefgehijkelmn split ""]]]
]]
