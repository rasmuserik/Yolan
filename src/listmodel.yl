[def updateFn [fn []]]

[def listModel exports]

[def listPrototype
  [# ['update [fn [] [updateFn call null this]]]
    ['getLength
      [fn []
        [if-else [this 'children]
          [return [[this 'children] 'length]]
          [return [[this 'value] 'length]]]]]]]

[listModel set 'setUpdateFn [fn [f] [set updateFn f]]]

[listModel set
  'create
  [fn [list]
    [def result [Object create listPrototype]]
    [if [[Array isArray list] fails]
      [result set 'value list]
      [return result]]
    [result set
      'children
      [list map
        [fn [elem]
          [def t [listModel create elem]]
          [t set 'parent result]
          [return t]]]]
    [return result]]]
