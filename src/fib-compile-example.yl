[def fib
  [fn [n]
    [def result 1]
    [if [1 < n]
      [set result [[fib call null [n - 1]] + [fib call null [n - 2]]]]]
    [yolan log result]
    [return result]]]

[exports set 'run [fn []
[yolan log [fib call null 10]]]]

[; yvm
  [function _0
    [global [fib yolan null]]
    [local [result]]
    [args [n]]
    [consts [1 2]]
    [code
      [do [const 0]
        [setLocal result]
        [pop]
        [if-else [[const 0] [getArg n] [invoke < var var]]
          [[const 1] [getArg n]
            [invoke - var var]
            [getGlobal null]
            [getGlobal fib]
            [invoke call var var var]
            [const 0]
            [getArg n]
            [invoke var - 2]
            [getGlobal null]
            [getGlobal fib]
            [invoke call var var var]
            [invoke + var var]
            [setLocal result]]
          [[constUndefined]]]
        [pop]
        [getLocal result]
        [getGlobal yolan]
        [invoke log var var]
        [pop]
        [getLocal result]
        [return]]]]
  [function entry
    [global [yolan null]]
    [local [fib]]
    [args []]
    [consts [10]]
    [getGlobal null]
    [getGlobal yolan ]
    [getLocal fib]
    [createFunction _0 3]
    [setLocal fib]
    [pop]
    [const 0]
    [getGlobal null]
    [getLocal fib]
    [invoke call var var]
    [getGlobal yolan]
    [invoke log var var]
    [return]]]
