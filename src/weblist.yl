[def yolan [module require './yolan]]

[def syntax [module require './syntax]]

[def webcolor [module require './webcolor]]

[def listobject [module require './listobject]]

[def test [module require './test]]

[Section: add style to head
  [Section: Utility function for converting yolan style to css
    [exports set
      'style2css
      [fn [style]
        [def keys [Object keys style]]
        [def result [@]]
        [def i 0]
        [while [i < [keys 'length]]
          [def key [keys get i]]
          [result push '.]
          [result push key]
          [result push '{]
          [result push
            [[[style get key] map
                [fn [elem]
                  [return [[elem get 0] + ': [[elem slice 1] join '\ ]]]]]
              join
              ';]]
          [result push '}\n]
          [set i [i + 1]]]
        [return [result join ""]]]]]
  [Section: The desired style in list format
    [exports set
      'style
      [#
        ['listAtom
          '[[margin 0em .0em 0em .0em]
            [background-color rgba(255,255,255,0.5)]
            [border-radius .3em]
            [white-space pre-wrap]
            [font-family sans-serif]]]
        ['list
            '[[padding .1em .1em .1em .2em]
            [margin .1em .1em .1em .1em]
            [display inline-block]
            [border-radius .3em]
            [border .1em solid]
            [box-shadow .2em .2em .6em rgba(0,0,0,.4)]
            ]]]]]
  [Section: set the style in the head-tag
  [def styleTag [document createElement 'style]]
  [styleTag appendChild [document createTextNode [exports style2css [exports 'style]]]]
  [[[document getElementsByTagName 'head] get 0] appendChild styleTag]
  ]
  [Section: Experimental / test code
    [console log [[document getElementsByTagName 'head] get 0]]
    [console log [exports style2css [exports 'style]]]]]

[def obj2html
  [fn [obj]
    [if [obj 'value]
      [def span [document createElement 'span]]
      [span set 'className 'listAtom]
      [span appendChild
        [document createTextNode
          [[JSON stringify [obj 'value]] slice 1 -1]]]
      [return span]]
    [def div [document createElement 'div]]
    [def color [[[Math random] * 0x1000000] & 0xffffff]]
    [div set 'className 'list]
    [def style [div 'style]]
    [style set
      'backgroundColor
      [webcolor intToColor [0xe0e0e0 | [color / 8]]]]
    [style set 'borderColor  [webcolor intToColor color]]
    [def first true]
    [[obj 'children] forEach
      [fn [child]
        [if [first fails] [div appendChild [document createTextNode '\ ]]]
        [div appendChild [obj2html call null child]]
        [set first false]]]
    [return div]]]

[exports set
  'run
  [fn [filename]
    [if [filename fails]
      [[document 'body] set 'innerHTML 'Usage:\ weblist\ filename]
      [return undefined]]
    [yolan readTextFile filename
      [fn [err data]
        [if err [console log 'Error: err] [return undefined]]
        [[[document 'body] 'style] set 'margin '0px]
        [[[document 'body] 'style] set 'background '#f8f8f8]
        [def list [syntax parse [syntax tokenize data]]]
        [def obj [listobject create list]]
        [console log obj]
        [[document 'body] appendChild [obj2html call null obj]]]]]]
