[def fs [module require [quote fs]]]

[def syntax [module require [quote ./syntax]]]

[def macros [module require [quote ./macros]]]

[def jsBackend [module require [quote ./jsBackend]]]

[def ilBackend [module require [quote ./ilBackend]]]

[def action [[process get [quote argv]] get 2]]

[exports set [quote sourceFiles]
  [[fs readdirSync [quote src]] filter
    [fn [name] [[name slice -3] == [quote .yl]]]]]

[def mtime
  [fn [fname]
    [try-catch e
      [return [[[fs statSync fname] get [quote mtime]] getTime]]
      [return 0]]
    0]]

[exports set [quote run]
  [fn []
    [[exports get [quote sourceFiles]] forEach
      [fn [f]
        [def src [[quote src/] + f]]
        [def dest [[quote build/] + [f slice 0 -3]]]
        [if [[mtime call null [dest + [quote .js]]] < [mtime call null src]]
          [compile call null src dest]]
        undefined]]]]

[exports set [quote yl2js]
  [fn [src]
    [jsBackend toJS [macros transform [syntax parse [syntax tokenize src]]]]]]

[def compile
  [fn [src dest]
    [fs readFile src [quote utf8]
      [fn [err data]
        [console log src [quote ->] dest]
        [if err [return err]]
        [# compile exports to js]
        [def ast [macros transform [syntax parse [syntax tokenize data]]]]
        [# console log [syntax prettyprint ast]]
        [def js [jsBackend toJS ast]]
        [def sourceCode
          [[[[[macros reverse ast] slice 1] map
                [syntax get [quote prettyprint]]]
              join [quote \n\n]]
            + [quote \n]]]
        [fs writeFile [dest + [quote .yl]] sourceCode]
        [fs writeFile [dest + [quote .js.raw]] sourceCode]
        [# reformat js]
        [def uglify [require call null [quote uglify-js]]]
        [def jsp [uglify get [quote parser]]]
        [def pro [uglify get [quote uglify]]]
        [try-catch e
          [def ast [jsp parse js]]
          [do [console log dest] [console log e]]]
        [set js [pro gen_code ast [new object [[quote beautify] true]]]]
        [fs writeFile
          [dest + [quote .js]]
          js
          [fn [err data] [if err [return err]] true]]]]]]
